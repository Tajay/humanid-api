"use strict";class HumanID{constructor(e){this.baseUrl=e.apiUrl||"",this.appId=e.appId,this.appSecret=e.appSecret,this.interval=e.interval||5e3}static async sleep(e){return new Promise(t=>setTimeout(t,e))}async requestOTP(e,t){let r=await fetch(this.baseUrl+"/web/users/verifyPhone",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({countryCode:e,phone:t,appId:this.appId,appSecret:this.appSecret})});if(r.ok)return r;{let e=await r.text();throw new Error(e)}}async login(e,t,r){let a=!1,s=null,i=null,n={countryCode:e,phone:t,appId:this.appId,appSecret:this.appSecret};r&&(n.verificationCode=r);let o=JSON.stringify(n);for(;!a;){if(!(s=await fetch(this.baseUrl+"/web/users/login",{method:"POST",headers:{"Content-Type":"application/json"},body:o})).ok){let e=await s.text();throw new Error(e)}if("CONFIRMED"===(i=await s.json()).status)a=!0;else{if("REJECTED"===i.status)throw new Error("Login request rejected");"PENDING"===i.status&&await HumanID.sleep(this.interval)}}return a}}